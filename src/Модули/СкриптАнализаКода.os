#Использовать "../gemini"
#Использовать "../utils"

JSON = РаботаСФайлами.СодержимоеТекстовогоДокумента(ТекущийСценарий().Каталог + "\..\..\env.json");
env = РаботаСJSON.ЗначениеИзJSON(JSON);

КодКАнализу = РаботаСФайлами.СодержимоеТекстовогоДокумента(ТекущийСценарий().Каталог + "\..\..\temp\clipboard.txt");

Gemini = Новый Gemini(env.geminiApiKey);
Результат = Gemini.АнализироватьКод(КодКАнализу);

ПутьКФайлуHTML = ТекущийСценарий().Каталог + "\..\..\temp\code-explanation.html";
СодержимоеHTML = РаботаСФайлами.СодержимоеТекстовогоДокумента(ПутьКФайлуHTML);

КомментарийОткрытияMarkdown = "//++ Mardown";
КомментарийЗакрытияMarkdown = "//-- Mardown";

ПозицияНачалаMarkdown = СтрНайти(СодержимоеHTML, КомментарийОткрытияMarkdown);
ПозицияЗавершенияMarkdown = СтрНайти(СодержимоеHTML, КомментарийЗакрытияMarkdown);

ДлинаКомментария = СтрДлина(КомментарийОткрытияMarkdown);
ЧислоСимволовКЗамене = ПозицияЗавершенияMarkdown - ДлинаКомментария - ПозицияНачалаMarkdown;

ТекстОтвета = Результат.Ответ;
ТекстОтвета = СтрЗаменить(ТекстОтвета, Символы.ПС, "\n");
ТекстОтвета = СтрЗаменить(ТекстОтвета, "'", """");

ТекстКЗамене = Сред(СодержимоеHTML, ПозицияНачалаMarkdown + ДлинаКомментария, ЧислоСимволовКЗамене);
ТекстКподстановке = СтрШаблон("
|const markdown = '%1';
|", ТекстОтвета);
СодержимоеHTML = СтрЗаменить(СодержимоеHTML, ТекстКЗамене, ТекстКподстановке);

РаботаСФайлами.ЗаписатьТекстовыйДокумент(ПутьКФайлуHTML, СодержимоеHTML);

ЗапуститьПриложение(ПутьКФайлуHTML);
